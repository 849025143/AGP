# Configuration file

announcements {
    # Whether or not to announce leaders joining the server
    B:announceLeaderJoin=true

    # Whether or not to announce leaders quiting the server
    B:announceLeaderQuit=true

    # Whether or not the AGP announcement message is enabled.
    B:announcementEnabled=true

    # The AGP announcement message. (Supports color formatting codes)
    S:announcementMessage=&f[&dAGP&f] &7This server is running &bAGP &7created by &bAnDwHaT5! &7Use &b/GymList &7to see what Gyms the server has to offer!

    # The time in ticks between each AGP announcement message.
    I:announcementTimer=16800

    # Whether or not to announce leaders closing a gym
    B:closeAnnouncement=true

    # The announcement for closing a gym. {leader} = Gym Leader, {gym} = gym opened. (Supports color formatting codes).
    S:closeMessage=&f[&dAGP&f] &7Gym Leader &b{leader} &7has closed the &b{gym} &7Gym!

    # The announcement for leaders joining the server. {leader} = Gym Leader. (Supports color formatting codes).
    S:leaderJoinMessage=&f[&dAGP&f] &7Gym Leader &b{leader} &7has joined the server!

    # The announcement for leaders joining the server. {leader} = Gym Leader. (Supports color formatting codes).
    S:leaderQuitMessage=&f[&dAGP&f] &7Gym Leader &b{leader} &7has left the server!

    # Whether or not to announce leaders opening a Gym
    B:openAnnouncement=true

    # The announcement for opening a gym. {leader} = Gym Leader, {gym} = gym opened. (Supports color formatting codes).
    S:openMessage=&f[&dAGP&f] &7Gym Leader &b{leader} &7has opened the &b{gym} &7Gym!

    # Whether or not to announce players beating a gym
    B:winAnnouncement=true

    # The announcement for defeating a gym. {challenger} = player, {leader} = Gym Leader, {gym} = gym defeated. (Supports color formatting codes).
    S:winMessage=&f[&dAGP&f] &7Challenger &b{challenger} &7has beat the &b{gym} &7Gym!
}


general {
    # Should a gym be automatically be opened when a leader from a gym with no other leaders online joins the server?
    B:autoOpen=true

    # Should a Gym show NPC Mode as its status when the last leader of a certain gym logs off and an NPC is present?
    B:offlineNPC=true

    # Should physical gym badges be given along with the digital ones?
    B:physicalBadge=true
}


storage {
    # The table for badges to be stored under. Only valid with h2 or mysql storage options.
    S:BadgesTableName=agp_badges

    # The table for gyms to be stored under. Only valid with h2 or mysql storage options.
    S:GymsTableName=agp_gyms

    # The mysql address.
    S:MysqlAddress=localhost

    # The mysql database name.
    S:MysqlDatabaseName=database

    # The mysql password.
    S:MysqlPassword=password1

    # The mysql port.
    I:MysqlPort=3306

    # The mysql username.
    S:MysqlUsername=username

    # Valid storage types are: flatfile, h2, mysql.
    S:storageType=flatfile
}


